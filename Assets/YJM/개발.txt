구현하고자 하는 기능
    //1. 준비된 deck 섞기(셔플 알고리즘)
    //2. 섞인 덱중 윗 4장을 myHand로 넘겨주기
    //4. 덱에있는 맨 위의 카드를 myHand로 보내기
    //5. myHand에서 사용된 카드를 deck으로 이동시키기(선입선출 주의)

데이터 테이블
int[] deck = [카드리스트.Count]
myHand = new int[4]


해당 기능 구현에 만난 문제점
1.앞에 4장 념겨주면 뒤의 4장이 앞으로 쫘라락 땡겨져야하는데 배열기능의 특성상 이미 자기자리에 박혀있어서 안움직임. List안쓰고 배열로 해결가능한가?
ㄴ 사용된카드값이 들어있는 배열의 값을 null로 바꾸고 값을 검색하는 변수로 null을 이 들어있는 배열의 위치를 찾은후 그 뒤 위치의 값을 for문 돌려서 한칸씩 땡겨줄수 있겠지만 너무 복잡하다
2. 1번의 문제를 해결하기위해 List를 사용해 deckList라는 변수리스트를 만든다음 deck의 셔플된 값을 deckList에 넘겨주는 식으로 1번을 해결하였으나 
deckList 에서 myHand로 카드를 넘겨주는 기능 구현 후에 myHand[a]의 카드 변수와 실제 보이는 카드를 어떻게 연동시켜야 할것인가?
ㄴ 또한 카드가 사용되면 myHand 4개중 랜덤하게 사용될텐데 사용된 위치를 어떻게 찾아낼것인지?
ㄴCard.cs에 트리거를 만들어서 파괴되기 직전에 작동시켜주면 CardManager에서 트리거를 인식후에 파괴된카드에 해당하는 myHand[a] 배열 위치에 deckList[0]번을 넣어주는 식으로 가능하겠지만
너무 복잡해지고 이걸 코드로 어떤식으로 구현해야 할지 잘 모르겠음


대안

myHand 개념을 없애고 deck에서 셔플 한번 돌린후에 List형식의 deckList가 이를 받고 myHand의 역할까지 같이 수행한다
즉 deckList에서 myHand로 이동하고 myHand가 현재 카드를 표시해주는 기능 대신 deckList[0] 의 값을 바로 카드에게 주고 
deckList.Add[deckList[0]] deckList.RemoveAt[deckList[0]]을 한번 해줘서 카드에게 준 값을 리스트 맨 뒤로 보내는것이다
이러면 내 손에 무슨카드가 있는지 Card.cs에서 값을 불러와야 알수 있겠지만 그 기능은 안필요할거같은데? 덱 시스템을 지금 당장 구현이 가능하다.






할것 : 드래그할수록 작아지는 카드 만들기
필요한 변수
Vector3 원래 카드위치 (cardRtPos)
Vector3 현재 카드위치 (tr.localPosition)

현재 카드위치가 원래 카드위치에서 멀어질수록
tr.localScale이 1 에서 0에 가까워지도록 코딩

tr.lLocalPosition - cardRtPos 하면 거리를 계산할수 있다 (0,0,0)
여기에 Mathf.Abs() 를 이용하면 절대값을 계산할수있다

카드의 y좌표가 174 -> 389 가 될수록 1에서 0으로 변하게 코딩해야 하는데 이걸 어떻게 하지?
         (1)      (0) 으로 잡고 정규화를 때려야 할거같은데 모르겠다
